.--image {
    // Add A Fixed Height To Parent Element Based On Size Of Image In Use
    @mixin height($size) {
        &-height {
            height: image(size $size);
        }
    }

    @mixin padding($direction, $size) {
        padding-#{$direction}: image(size $size) + app(image padding);
        position: relative;

        @each $breakpoint in app(breakpoints) {
            @include breakpoint(max-width, $breakpoint) {
                &-#{$breakpoint} {
                    padding-#{$direction}: image(size $size) + app(image padding);
                    position: relative;
                }
            }
        }
    }


    & {
        @include height(default);
    }

    @each $size in image(size modifiers) {
        &-#{$size} {
            @include height($size);
        }
    }

    // Add Padding On Each Side Of Parent Element Based On Size Of Image In Use
    @each $direction in 'top' 'right' 'bottom' 'left'  {
        &-#{$direction} {
            @include padding($direction, 'default');
        }

        @each $size in image(size modifiers) {
            &-#{$size}-#{$direction} {
                @include padding($direction, $size);
            }
        }

        @each $breakpoint in app(breakpoints) {
            @include breakpoint(max-width, $breakpoint) {
                &-#{$direction}-hidden-#{$breakpoint} {
                    padding-#{$direction}: 0;
                }
            }
        }
    }
}
