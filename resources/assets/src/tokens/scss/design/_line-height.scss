/**
 *------------------------------------------------------------------------------
 *
 *  Line Height
 *
 */

@include token-set(line-heights, (
    300: 1.16,
    400: 1.40,
    500: 1.64
));


/**
 *------------------------------------------------------------------------------
 *
 *  Functions
 *
 */

@function line-height($key: token-weight(default)) {
    @return token-get(line-heights $key);
}

// Decide Line Height Based On Input
@function line-height-filter($input: null) {
    $line-height: null;

    @if $input == null or not $input {
        $input: font-size();
    }

    @if type-of($input) == number and unitless($input) {
        $line-height: $input;
    }
    @else if str-contains(px, $input) {
        $number: strip-unit($input);
        $weight: 500;

        @if $number > 14 {
            $weight: 400;
        }

        @if $number > 18 {
            $weight: 300;
        }

        $line-height: token-get(line-heights $weight);
    }

    @return $line-height;
}


/**
 *------------------------------------------------------------------------------
 *
 *  Mixins
 *
 */

// Macro To Simplify Setting Line Height + Text Crop ( Optional )
@mixin line-height($input: null, $denominator: null) {
    @if($denominator != null) {
        line-height: divide($input, $denominator);
    }
    @else {
        line-height: line-height-filter($input);
    }
}
