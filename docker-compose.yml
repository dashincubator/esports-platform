networks:
    backend:
        driver: bridge
    frontend:
        driver: bridge

services:
    mariadb:
        build:
            args:
                MYSQL_SOCKET: ${MYSQL_SOCKET}
                SOCKET_DIR: ${SOCKET_DIR}
            context: ./storage/docker/mariadb
        container_name: mariadb
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
        networks:
            - backend
        restart: unless-stopped
        volumes:
            - ./storage/database.sql:/docker-entrypoint-initdb.d/init.sql
            - mariadb:/var/lib/mysql
            - socket:${SOCKET_DIR}

    mariadb-cron:
        build:
            args:
                MYSQL_BACKUP: /backup/backup.sql
                MYSQL_DATABASE: ${MYSQL_DATABASE}
                MYSQL_PASSWORD: ${MYSQL_PASSWORD}
                MYSQL_SOCKET: ${MYSQL_SOCKET}
                MYSQL_USER: ${MYSQL_USER}
            context: ./storage/docker/mariadb-cron
        container_name: mariadb-cron
        depends_on:
            - mariadb
        networks:
            - backend
        restart: unless-stopped
        volumes:
            - ./storage/docker/mariadb/backup:/backup
            - /var/run/docker.sock:/var/run/docker.sock

    nginx:
        build:
            args:
                NGINX_ERROR_403: ${NGINX_ERROR_403}
                NGINX_ERROR_404: ${NGINX_ERROR_404}
                PHP_PUBLIC_DIR: ${PHP_PUBLIC_DIR}
                PHP_PUBLIC_INDEX: ${PHP_PUBLIC_INDEX}
                PHP_SOCKET: ${PHP_SOCKET}
            context: ./storage/docker/nginx
        container_name: nginx
        depends_on:
            - php
        networks:
            - frontend
        ports:
            - 80:80
            - 443:443
        restart: unless-stopped
        volumes:
            - ./storage/docker/nginx/certs:/etc/nginx/certs:ro
            - ./public:${PHP_PUBLIC_DIR}
            - socket:${SOCKET_DIR}

    php:
        build:
            args:
                PHP_DIR: ${PHP_DIR}
                PHP_SOCKET: ${PHP_SOCKET}
            context: ./storage/docker/php
        container_name: php
        depends_on:
            - mariadb
            - redis-session
            - redis-storage
        networks:
            - backend
            - frontend
        restart: unless-stopped
        volumes:
            - .:${PHP_DIR}:consistent
            - socket:${SOCKET_DIR}

    php-cron:
        build:
            args:
                PHP_JOBS_DIR: ${PHP_JOBS_DIR}
            context: ./storage/docker/php-cron
        container_name: php-cron
        depends_on:
            - php
        networks:
            - backend
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    redis-session:
        build:
            args:
                REDIS_MAXMEMORY: 1024mb
                REDIS_PASSWORD: ${REDIS_SESSION_PASSWORD}
                REDIS_PORT: 6379
                REDIS_SOCKET: ${REDIS_SESSION_SOCKET}
                SOCKET_DIR: ${SOCKET_DIR}
            context: ./storage/docker/redis
        container_name: redis-session
        networks:
            - backend
        restart: unless-stopped
        sysctls:
            net.core.somaxconn: 512
        volumes:
            - redis-session:/data
            - socket:${SOCKET_DIR}

    redis-storage:
        build:
            args:
                REDIS_MAXMEMORY: 3072mb
                REDIS_PASSWORD: ${REDIS_STORAGE_PASSWORD}
                REDIS_PORT: 6380
                REDIS_SOCKET: ${REDIS_STORAGE_SOCKET}
                SOCKET_DIR: ${SOCKET_DIR}
            context: ./storage/docker/redis
        container_name: redis-storage
        networks:
            - backend
        restart: unless-stopped
        sysctls:
            net.core.somaxconn: 512
        volumes:
            - redis-storage:/data
            - socket:${SOCKET_DIR}

version: '3.7'

volumes:
    mariadb:
    redis-session:
    redis-storage:
    socket:
